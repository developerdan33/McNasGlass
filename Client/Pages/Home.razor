@page "/"
@inherits SharedComponentBase

@{
	string pageName = "McNa's Glass";
}

<PageTitle>@pageName</PageTitle>

<div id="home-page">
	<div id="banner" class="carousel slide" data-bs-ride="carousel">
		<div class="carousel-indicators">
			<button type="button" data-bs-target="#banner" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
			<button type="button" data-bs-target="#banner" data-bs-slide-to="1" aria-label="Slide 2"></button>
			<button type="button" data-bs-target="#banner" data-bs-slide-to="2" aria-label="Slide 3"></button>
		</div>

		<div class="carousel-inner">
			<div class="carousel-item active">
				<img src="/images/home/banner1.jpg" class="d-block w-100" alt="McNasGlass">
			</div>

			<div class="carousel-item">
				<img src="/images/home/banner2.jpg" class="d-block w-100" alt="McNasGlass">
			</div>
			
			<div class="carousel-item">
				<img src="/images/home/banner3.jpg" class="d-block w-100" alt="McNasGlass">
			</div>
		</div>
	</div>

	<div id="home-about" class="panel">
		<h1>About</h1>

		<div class="divider divider-lg"></div>

		<div id="cards" class="row row-cols-1 row-cols-md-3 g-4">
			@foreach (Models.About about in AboutItems)
			{
				<div class="col">
					<div class="card">
						<div class="card-body">
							<i class="@about.Icon"></i>
		
							<h5 class="card-title">@about.Title</h5>
		
							<div class="divider divider-sm"></div>
			
							<p class="card-text">
								@about.Text
							</p>
						</div>
					</div>
				</div>
			}
		</div>
	</div>

	<div id="home-services" class="panel">
		<h1>Services</h1>

		<div class="divider divider-lg"></div>

		<div id="tiles" class="row justify-content-center">
			@{
				int servicesIndex = 0;
			}

			@foreach (Service service in Services)
			{
				<div class="col-4 col-md-3 col-lg">
					<div class="service">
						<img src="/images/services/@(service.ImageUrl)" alt="@service.Title"/>

						<h5 class="title">@service.Title</h5>
					</div>
				</div>

				if (servicesIndex == 4)
				{
					<div class="w-100"></div>
				}

				servicesIndex++;
			}
		</div>
	</div>

	<div id="home-reviews" class="panel">
		<h1>Testimonials</h1>

		<div class="divider divider-lg"></div>

		<div id="reviews-carousel" class="carousel carousel-dark slide" data-bs-ride="true">
			<div class="carousel-inner">
				@{
					int zeroIndex = 0;
				}

				@foreach (Testimonial testimonial in Testimonials)
				{
					<div class="carousel-item @(zeroIndex == 0 ? "active" : String.Empty)">
						<div class="inner">
							<h5 class="title">@testimonial.Title</h5>

							<div class="stars">
								<i class="fas fa-star"></i>
								<i class="fas fa-star"></i>
								<i class="fas fa-star"></i>
								<i class="fas fa-star"></i>
								<i class="fas fa-star"></i>
							</div>

							<p>
								@testimonial.Text
							</p>

							<div class="name">- @testimonial.Author</div>
						</div>
					</div>

					zeroIndex++;
				}

				<button class="carousel-control-prev" type="button" data-bs-target="#reviews-carousel" data-bs-slide="prev">
					<span class="carousel-control-prev-icon" aria-hidden="true"></span>
					<span class="visually-hidden">Previous</span>
				  </button>
				  <button class="carousel-control-next" type="button" data-bs-target="#reviews-carousel" data-bs-slide="next">
					<span class="carousel-control-next-icon" aria-hidden="true"></span>
					<span class="visually-hidden">Next</span>
				  </button>
			</div>
		</div>
	</div>
</div>

@code
{
	private List<Models.About> AboutItems = new List<Models.About>();
	private List<Models.Service> Services = new List<Models.Service>();
	private List<Models.Testimonial> Testimonials = new List<Models.Testimonial>();

	protected override async Task OnInitializedAsync()
	{
		try
		{
			AboutItems = await HttpClient.GetFromJsonAsync<List<Models.About>>("/data/about.json");
			Services = await HttpClient.GetFromJsonAsync<List<Models.Service>>("/data/services.json");
			Testimonials = await HttpClient.GetFromJsonAsync<List<Models.Testimonial>>("/data/testimonials.json");
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.ToString());
		}
	}
}